<p>
    F√©licitations üéâ, vous avez d√©couvert la recherche avanc√©e cach√©e !
</p>
<p style="color: #d20000;">
    Si vous n'avez pas volontairement activ√© cette recherche avanc√©e et ne savez pas ce que vous fa√Ætes, <strong>pas de panique</strong>, vous pouvez continuez √† utiliser la recherche de fa√ßon normale et ignorer la documentation ci-dessous.<br />
    Vous pouvez √©galement la d√©sactiver en utilisant la m√™me combinaison de touche que vous avez faites pour l'ouvrir.
</p>

<h4 class="mt-3">D√©finition de la recherche avanc√©e</h4>
<p>
    Cette recherche permet ainsi de rechercher de fa√ßon extr√™mement approfondie, moyennant toutefois une certaine connaissance du langage Javascript.
</p>
<p>
    La syntaxe de recherche avanc√©e est similaire √† celle-ci: <code>expr:(death !== null)</code>.
</p>
<p>
    Notez ici qu'en terme de variable, seule la variable <code>death</code> est disponible bien s√ªr avec les fonctions et op√©rateurs habituels du langage Javascript.
    Cette variable est un objet dont l'interface <code>Death</code> est <a href="https://github.com/Geolim4/In-Memoriam/blob/master/src/ts/models/Death/death.model.ts" target="_blank">disponible sur Github <i class="fa-solid fa-arrow-up-right-from-square"></i></a>.
</p>

<p>
    A noter qu'en l'absence de la balise <code>expr:(   )</code>, la recherche se comportera normalement sur la base de mots-cl√©s pertinents.
</p>

<h4 class="mt-3">Mise en pratique de la recherche avanc√©e</h4>
<p>
    Pour qu'un marqueur soit exclu de la recherche, l'expression contenue √† l'int√©rieur de <code>expr:(   )</code> doit retourner <code>false</code>.<br />
    A l'inverse si le marqueur doit √™tre conserv√© par la recherche, l'expression doit retourner <code>true</code>.<br />
    Vous pouvez tout √† fait tester plusieurs expressions en les combinant avec les op√©rateurs logiques <code>&&</code> ou <code>||</code>. <br />
</p>

<p>
    Par exemple si vous souhaitez n'afficher que les marqueurs ayant AU moins 3 sources et impliquant PLUS D'UN d√©c√®s, alors l'expression sera la suivante: <br />
    <code>expr:(death.sources.length >= 3 && death.count > 1)</code>
</p>

<p>
    Le code ex√©cut√© dans √† l'int√©rieur de la balise <code>expr:(   )</code> est ex√©cut√© dans un environnement isol√© (sandbox), il n'a donc pas acc√®s √† l'application et ne risque pas de perturber son bon fonctionnement.<br />
    En cas de syntaxe Javascript invalide ou d'absence de r√©sultats suite √† un filtrage trop restrictif, une modale d'information ou d'alerte s'ouvrira en cons√©quence.
</p>

<p class="mt-3">
    <em>‚ú® Bonne recherche avanc√©e ! ‚ú®</em>
</p>


